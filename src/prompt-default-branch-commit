#!/usr/bin/env bash

# ---------------------------------------------------------------------------------------- #
# Description                                                                              #
# ---------------------------------------------------------------------------------------- #
# A simply script to run as a pre-commit hook to prompt the user before commits to the     #
# default main branch are accepted.                                                        #
# ---------------------------------------------------------------------------------------- #

ABD=false

if [[ $ABD = true ]]; then
    DEFAULT_BRANCH=$(git remote show origin | grep 'HEAD' | cut -d':' -f2 | sed -e 's/^ *//g' -e 's/ *$//g')
else
    DEFAULT_BRANCH='master'
fi

PROMPT="Are you sure you want to commit to the ${DEFAULT_BRANCH} branch? [Yes/No] "

function check_for_confirmation
{
    local valid_response=false
    local return_code=2

    # Allows us to read user input below, assigns stdin to keyboard
    exec < /dev/tty

    while [[ "${valid_response}" = false ]]
    do
        read -r -p "${PROMPT}" response
        case $response in
            [yY][eE][sS]|[yY])
                valid_response=true
                return_code=0
                ;;
            [nN][oO]|[nN])
                valid_response=true
                return_code=1
                ;;
            *)
                ;;
        esac
    done
    # Reclose STDIO
    exec <&-
    echo "${return_code}"
}

# ---------------------------------------------------------------------------------------- #
# Main()                                                                                   #
# ---------------------------------------------------------------------------------------- #
# The main function where all of the heavy lifting and script config is done.              #
# ---------------------------------------------------------------------------------------- #

function main()
{
    local confirmation=0

    if branch=$(git rev-parse --abbrev-ref HEAD 2>&1); then
        if [[ "${branch}" = "${DEFAULT_BRANCH}" ]]; then
            confirmation=$(check_for_confirmation)
        fi
    fi
   exit "${confirmation}"
}

# ---------------------------------------------------------------------------------------- #
# Main()                                                                                   #
# ---------------------------------------------------------------------------------------- #
# The actual 'script' and the functions/sub routines are called in order.                  #
# ---------------------------------------------------------------------------------------- #

main "${@}"

# ---------------------------------------------------------------------------------------- #
# End of Script                                                                            #
# ---------------------------------------------------------------------------------------- #
# This is the end - nothing more to see here.                                              #
# ---------------------------------------------------------------------------------------- #
